
services:
  frontend:
    container_name: gestionstage_frontend
    build:
      context: frontend
    ports:
      - 127.0.0.1:3001:3000
  backend:
    container_name: gestionstage_backend
    build:
      context: backend
    ports:
      - 127.0.0.1:5001:5000
#      - 5000:5000
#    networks:
#      - gestionstage_network
  database:
    image: "mongo:latest"
    container_name: gestionstage_database
    ports:
        # la base de donnée est seulement accessible depuis loopback pour pas qu'on puisse s'y connecter depuis internet.
        # elle est sur un port différent du port de mongo pour ne pas faire une collision avec une installation de mongo sur le host.
		# à noter que le backend n'utilise pas cet interface pour se connecter à la base de données.
      - 127.0.0.1:27018:27017
    volumes:
      - ./data:/data/db
  nginx:
    image: "nginx:latest"
    container_name: gestionstage_nginx
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    volumes:
      - ./nginx/gestionstage.conf:/etc/nginx/conf.d/gestionstage.conf
#    networks:
#      - gestionstage_network


#networks:
#  gestionstage_network:
#    driver: bridge

# https://geshan.com.np/blog/2023/03/mongodb-docker-compose/
