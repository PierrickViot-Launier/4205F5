


# tout les services, sauf nginx, sont seulement bindé à loopback et à rien d'autre afin qu'ils ne soient pas accessible à partir d'internet. 
# à noter que les échanges entre les différent containers ne passent pas par l'interface de loopback du host.
# les ports auxquels les containers sont bindé dans le loopback sont incrémenté de 1 pour ne pas faire une collision avec un potentiel service qui l'utilise sur le host.

services:
  frontend:
    container_name: gestionstage_frontend
    build:
      context: frontend
    ports:
      - 127.0.0.1:3001:3000
  backend:
    container_name: gestionstage_backend
    build:
      context: backend
    ports:
      - 127.0.0.1:5001:5000
#      - 5000:5000
#    networks:
#      - gestionstage_network
  database:
    image: "mongo:latest"
    container_name: gestionstage_database
    ports:
      - 127.0.0.1:27018:27017
    volumes:
      - ./data:/data/db
  nginx:
    image: "nginx:latest"
    container_name: gestionstage_nginx
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    volumes:
      - ./nginx/gestionstage.conf:/etc/nginx/conf.d/gestionstage.conf
#    networks:
#      - gestionstage_network


#networks:
#  gestionstage_network:
#    driver: bridge

# https://geshan.com.np/blog/2023/03/mongodb-docker-compose/
